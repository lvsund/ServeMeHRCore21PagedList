@using X.PagedList;
@using X.PagedList.Mvc;
@using X.PagedList.Mvc.Core;
@model IPagedList<ServeMeHRCore21.Models.ServiceRequests>

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewData["Title"] = "TeamServiceRequests";
}

<h2>Team Service Requests</h2>
<p>
    <a asp-action="Create">Create New</a>
</p>
@using (Html.BeginForm("Index", "TeamServiceRequests", FormMethod.Get))
{

    <p>
        @Html.DropDownList("StatusType", "Select a Value")
    </p>
    <p>
        Search: @Html.TextBox("SearchString")
    </p>
    <p>
        <input type="submit" value="Search" />
    </p>

}

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-primary list-panel" id="list-panel">
            <div class="panel-heading list-panel-heading">
                <h1 class="panel-title list-panel-title">Team Service Requests</h1>
            </div>
            <div class="panel-body">
                <table id="TeamServiceRequests-data-table"
                       class="table table-striped table-bordered"
                       style="width:100%">
                    <thead>
                        <tr>
                            <th>
                                @Html.ActionLink("Id", "Index", new { sortOrder = ViewBag.IdSortParm })
                            </th>
                            <th>
                                @Html.ActionLink("Date Time Submitted", "Index", new { sortOrder = ViewBag.DTSSortParm })
                            </th>
                            <th>
                                RequestHeading
                            </th>
                            <th>
                                RequestorFirstName
                            </th>
                            <th>
                                RequestorLastName
                            </th>
                            <th>
                                RequestorPhone
                            </th>
                            <th>
                                RequestorEmail
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DateTimeSubmitted)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RequestHeading)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RequestorFirstName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RequestorLastName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RequestorPhone)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RequestorEmail)
                                </td>
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }) |
                                    @Html.ActionLink("New Comment", "Create", "ServiceRequestNotes", new { ServiceRequest = item.Id, returncontroller = "TeamServiceRequests" }, null)<br />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                    @Html.PagedListPager(Model, page => Url.Action("Index",
                        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }),PagedListRenderOptions.ClassicPlusFirstAndLast)


